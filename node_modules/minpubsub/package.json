{
  "name": "minpubsub",
  "description": "198 byte publish/subscribe messaging micro-framework",
  "version": "0.0.1",
  "keywords": [
    "publish",
    "subscribe",
    "pubsub",
    "observer"
  ],
  "author": {
    "name": "Daniel Lamb",
    "email": "daniellmb.com"
  },
  "dependencies": {},
  "main": "index",
  "engines": {
    "node": "*"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/daniellmb/minpubsub.git"
  },
  "readme": "MinPubSub\n=========\n\nA micro publish/subscribe messaging framework, weighing in at only **198 bytes** gzipped. Created by rewriting Peter Higgins' jQuery plugin, MinPubSub is completely self contained with no external dependencies. Keep your projects loosely coupled with this powerful design pattern.\n\n### Features\n\n- Supports\n\t- publish\n\t- subscribe\n\t- unsubscribe\n\n- Tested Environments\n\t- ES5\n\t- Node.js\n\t- Rhino\n\t- Development (console, etc.) \n\t- Safari 4 - 5\n\t- Google Chrome 5 - 10\n\t- Internet Explorer 5 - 9\n\t- iPhone Safari\n\t- iPad Safari\n\t- Firefox 3 - 4\n\t- Opera 10.61\n\n### How to use\n\n```javascript\n\t//subscribe to a topic\n\tvar handle = subscribe(\"/some/topic\", function(msg){\n\t\tconsole.log(msg);\n\t});\n\n\t//publish topic a few times\n\tpublish(\"/some/topic\", [\"first time\"]);\n\tpublish(\"/some/topic\", [\"second time\"]);\n\n\t//unsubscribe from the topic\n\tunsubscribe(handle);\n\n\t//subscriber is no longer listening to the topic\n\tpublish(\"/some/topic\", [\"message will not be logged\"]);\n```\n\n### Documentation \n\n##### Options:\n\nIf you don't want these methods added to the window object simply modify the immediate function to pass in the JavaScript object of your choosing.\n\n##### Methods:\n\n- **publish** *(`String` topic, `Array?` args)*\n\n\t- summary: \n\t\t- Publish some data on a named topic.\n\t\n\t- topic: `String`\n\t\t- The channel to publish on\n\t\n\t- args: `Array?`\n\t\t- Optional data to publish. Each array item is converted into ordered arguments on the subscribed functions. \n\t\n\t- example:\n\t\t- Publish stuff on '/some/topic'. Anything subscribed will be called with a function signature like: function(a,b,c){ ... }\n\n\t\t  ```javascript\n\t\t  publish(\"/some/topic\", [\"a\",\"b\",\"c\"]);\n\t\t  ```\n\n- **subscribe** *(`String` topic, `Function` callback)*\n\n\t- summary:\n\t\t- Register a callback on a named topic.\n\n\t- topic: `String`\n\t\t- The channel to subscribe to\n\n\t- callback: `Function`\n\t\t- The handler event. Anytime something is publish'ed on a subscribed channel, the callback will be called with the published array as ordered arguments.\n\n\t- returns: `Array`\n\t\t- A handle which can be used to unsubscribe this particular subscription.\n\n\t- example:\n\n\t\t  ```javascript\n\t\t  subscribe(\"/some/topic\", function(a, b, c){ /* handle data */ });\n\t\t  ```\n\n- **unsubscribe** *(`Array` handle)*\n\n\t- summary:\n\t\t- Disconnect a subscribed function for a topic.\n\n\t- handle: `Array`\n\t\t- The return value from a subscribe call.\n\t\n\t- example:\n\n\t\t```javascript\n\t\tvar handle = subscribe(\"/some/topic\", function(){});\n\t\tunsubscribe(handle);\n\t\t  ```\n\n\n### License \n\n(The MIT License)\n\nCopyright (c) 2011 Daniel Lamb <daniellmb.com>\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/daniellmb/minpubsub/issues"
  },
  "homepage": "https://github.com/daniellmb/minpubsub",
  "_id": "minpubsub@0.0.1",
  "dist": {
    "shasum": "84ab6eecee41e200815b08bc08cb9ec75254b44e"
  },
  "_from": "minpubsub@*",
  "_resolved": "http://r.cnpmjs.org/minpubsub/download/minpubsub-0.0.1.tgz"
}
